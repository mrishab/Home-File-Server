services:
  postiz:
    image: ghcr.io/gitroomhq/postiz-app:latest
    container_name: postiz
    restart: unless-stopped
    ports:
      - ${POSTIZ_PORT}:5000
    environment:
      MAIN_URL: "https://${POSTIZ_PUBLIC_DOMAIN}"
      FRONTEND_URL: "https://${POSTIZ_PUBLIC_DOMAIN}"
      NEXT_PUBLIC_BACKEND_URL: "https://${POSTIZ_PUBLIC_DOMAIN}/api"
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: "postgresql://${POSTIZ_USER}:${POSTIZ_PASSWORD}@postgres:5432/${POSTIZ_DB}"
      REDIS_URL: "redis://redis:6379"
      BACKEND_INTERNAL_URL: "http://localhost:3000"
      IS_GENERAL: "true" # Required for self-hosting.
      STORAGE_PROVIDER: "local"
      UPLOAD_DIRECTORY: "/uploads"
      NEXT_PUBLIC_UPLOAD_DIRECTORY: "/uploads"
    volumes:
      - ${POSTIZ_CONFIG_MOUNT_DIR}:/config
      - ${POSTIZ_UPLOAD_MOUNT_DIR}:/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:9.6.22-alpine3.14
    container_name: postiz_postgres
    restart: unless-stopped
    environment:
      # PG Super User
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE}
      # PG: Postiz User
      POSTIZ_DB: ${POSTIZ_DB}
      POSTIZ_USER: ${POSTIZ_USER}
      POSTIZ_PASSWORD: ${POSTIZ_PASSWORD}
    healthcheck:
      test: pg_isready -U ${POSTIZ_USER} -d ${POSTIZ_DB}
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - ./db-init-scripts:/docker-entrypoint-initdb.d
      - ${PG_MOUNT_DIR}:/var/lib/postgresql/data

  redis:
    image: redis:7.4.1
    container_name: postiz_redis
    restart: always
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - ${POSTIZ_REDIS_DATA_MOUNT_DIR}:/data
